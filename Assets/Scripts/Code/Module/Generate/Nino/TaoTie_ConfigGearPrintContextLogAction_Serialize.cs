/* this is generated by nino */
namespace TaoTie
{
    public partial class ConfigGearPrintContextLogAction
    {
        public static ConfigGearPrintContextLogAction.SerializationHelper NinoSerializationHelper = new ConfigGearPrintContextLogAction.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<ConfigGearPrintContextLogAction>
        {
            #region NINO_CODEGEN
            public override void Serialize(ConfigGearPrintContextLogAction value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.Write(value.disable);
                writer.CompressAndWrite(ref value.localId);
                writer.Write(value.isOtherGear);
                writer.CompressAndWrite(ref value.otherGearId);
                writer.Write(value.content);
            }

            public override ConfigGearPrintContextLogAction Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                ConfigGearPrintContextLogAction value = new ConfigGearPrintContextLogAction();
                reader.Read<System.Boolean>(ref value.disable, 1);
                reader.DecompressAndReadNumber<System.Int32>(ref value.localId);
                reader.Read<System.Boolean>(ref value.isOtherGear, 1);
                reader.DecompressAndReadNumber<System.UInt64>(ref value.otherGearId);
                value.content = reader.ReadString();
                return value;
            }
            #endregion
        }
    }
}