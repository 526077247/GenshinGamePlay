/* this is generated by nino */
namespace TaoTie
{
    public partial class ConfigAttackProperty
    {
        public static ConfigAttackProperty.SerializationHelper NinoSerializationHelper = new ConfigAttackProperty.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<ConfigAttackProperty>
        {
            #region NINO_CODEGEN
            public override void Serialize(ConfigAttackProperty value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.DamagePercentage);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.DamagePercentageRatio);
                writer.CompressAndWriteEnum<TaoTie.StrikeType>(value.StrikeType);
                writer.Write(value.EnBreak);
                writer.CompressAndWriteEnum<TaoTie.AttackType>(value.AttackType);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.DamageExtra);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.BonusCritical);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.BonusCriticalHurt);
                writer.Write(value.IgnoreLevelDiff);
                writer.Write(value.TrueDamage);
            }

            public override ConfigAttackProperty Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                ConfigAttackProperty value = new ConfigAttackProperty();
                value.DamagePercentage = reader.ReadCommonVal<TaoTie.BaseValue>();
                value.DamagePercentageRatio = reader.ReadCommonVal<TaoTie.BaseValue>();
                reader.DecompressAndReadEnum<TaoTie.StrikeType>(ref value.StrikeType);
                value.EnBreak = reader.ReadDictionary<TaoTie.HitBoxType,TaoTie.BaseValue>();
                reader.DecompressAndReadEnum<TaoTie.AttackType>(ref value.AttackType);
                value.DamageExtra = reader.ReadCommonVal<TaoTie.BaseValue>();
                value.BonusCritical = reader.ReadCommonVal<TaoTie.BaseValue>();
                value.BonusCriticalHurt = reader.ReadCommonVal<TaoTie.BaseValue>();
                reader.Read<System.Boolean>(ref value.IgnoreLevelDiff, 1);
                reader.Read<System.Boolean>(ref value.TrueDamage, 1);
                return value;
            }
            #endregion
        }
    }
}