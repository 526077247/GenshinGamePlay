/* this is generated by nino */
namespace TaoTie
{
    public partial class ConfigDoActionByStateIDMixin
    {
        [LitJson.Extensions.JsonIgnore]
        public static ConfigDoActionByStateIDMixin.SerializationHelper NinoSerializationHelper = new ConfigDoActionByStateIDMixin.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<ConfigDoActionByStateIDMixin>
        {
            #region NINO_CODEGEN
            public override void Serialize(ConfigDoActionByStateIDMixin value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.Write(value.ChargeLayer);
                writer.WriteCommonVal<System.Collections.Generic.HashSet<System.String>>(value.StateIDs);
                writer.WriteCommonVal<TaoTie.ConfigAbilityPredicate>(value.EnterPredicate==null?TypeInfo<TaoTie.ConfigAbilityPredicate>.Type:value.EnterPredicate.GetType(),value.EnterPredicate);
                writer.Write(value.EnterActions);
                writer.WriteCommonVal<TaoTie.ConfigAbilityPredicate>(value.ExitPredicate==null?TypeInfo<TaoTie.ConfigAbilityPredicate>.Type:value.ExitPredicate.GetType(),value.ExitPredicate);
                writer.Write(value.ExitActions);
            }

            public override ConfigDoActionByStateIDMixin Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                ConfigDoActionByStateIDMixin value = new ConfigDoActionByStateIDMixin();
                value.ChargeLayer = reader.ReadString();
                value.StateIDs = reader.ReadCommonVal<System.Collections.Generic.HashSet<System.String>>();
                value.EnterPredicate = reader.ReadCommonVal<TaoTie.ConfigAbilityPredicate>();
                value.EnterActions = reader.ReadArray<TaoTie.ConfigAbilityAction>();
                value.ExitPredicate = reader.ReadCommonVal<TaoTie.ConfigAbilityPredicate>();
                value.ExitActions = reader.ReadArray<TaoTie.ConfigAbilityAction>();
                return value;
            }
            #endregion
        }
    }
}