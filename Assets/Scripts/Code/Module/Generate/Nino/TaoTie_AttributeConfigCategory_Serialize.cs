/* this is generated by nino */
namespace TaoTie
{
    public partial class AttributeConfigCategory
    {
        public static AttributeConfigCategory.SerializationHelper NinoSerializationHelper = new AttributeConfigCategory.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<AttributeConfigCategory>
        {
            #region NINO_CODEGEN
            public override void Serialize(AttributeConfigCategory value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                if(value.list != null)
                {
                    writer.Write(true);
                    writer.CompressAndWrite(value.list.Count);
                    foreach (var entry in value.list)
                    {
                        TaoTie.AttributeConfig.NinoSerializationHelper.Serialize(entry, writer);
                    }
                }
                else
                {
                    writer.Write(false);
                }
            }

            public override AttributeConfigCategory Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                AttributeConfigCategory value = new AttributeConfigCategory();
                if(reader.ReadBool()){value.list = new System.Collections.Generic.List<TaoTie.AttributeConfig>(reader.ReadLength());
                for(int i = 0, cnt = value.list.Capacity; i < cnt; i++)
                {
                    var value_list_i = TaoTie.AttributeConfig.NinoSerializationHelper.Deserialize(reader);
                    value.list.Add(value_list_i);
                }}
                return value;
            }
            #endregion
        }
    }
}