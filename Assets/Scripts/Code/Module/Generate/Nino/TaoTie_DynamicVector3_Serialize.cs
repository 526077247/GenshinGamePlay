/* this is generated by nino */
namespace TaoTie
{
    public partial class DynamicVector3
    {
        public static DynamicVector3.SerializationHelper NinoSerializationHelper = new DynamicVector3.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<DynamicVector3>
        {
            #region NINO_CODEGEN
            public override void Serialize(DynamicVector3 value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.X);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.Y);
                writer.WriteCommonVal<TaoTie.BaseValue>(value.Z);
            }

            public override DynamicVector3 Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                DynamicVector3 value = new DynamicVector3();
                value.X = reader.ReadCommonVal<TaoTie.BaseValue>();
                value.Y = reader.ReadCommonVal<TaoTie.BaseValue>();
                value.Z = reader.ReadCommonVal<TaoTie.BaseValue>();
                return value;
            }
            #endregion
        }
    }
}