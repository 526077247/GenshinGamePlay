/* this is generated by nino */
namespace TaoTie
{
    public partial class ConfigGearAddVariableAction
    {
        public static ConfigGearAddVariableAction.SerializationHelper NinoSerializationHelper = new ConfigGearAddVariableAction.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<ConfigGearAddVariableAction>
        {
            #region NINO_CODEGEN
            public override void Serialize(ConfigGearAddVariableAction value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.Write(value.disable);
                writer.CompressAndWrite(ref value.localId);
                writer.Write(value.isOtherGear);
                writer.CompressAndWrite(ref value.otherGearId);
                writer.Write(value.key);
                writer.Write(value.limit);
                writer.Write(value.minValue);
                writer.Write(value.maxValue);
                writer.WriteCommonVal<TaoTie.BaseGearValue>(value.value);
            }

            public override ConfigGearAddVariableAction Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                ConfigGearAddVariableAction value = new ConfigGearAddVariableAction();
                reader.Read<System.Boolean>(ref value.disable, 1);
                reader.DecompressAndReadNumber<System.Int32>(ref value.localId);
                reader.Read<System.Boolean>(ref value.isOtherGear, 1);
                reader.DecompressAndReadNumber<System.UInt64>(ref value.otherGearId);
                value.key = reader.ReadString();
                reader.Read<System.Boolean>(ref value.limit, 1);
                reader.Read<System.Single>(ref value.minValue, Nino.Shared.Mgr.ConstMgr.SizeOfUInt);
                reader.Read<System.Single>(ref value.maxValue, Nino.Shared.Mgr.ConstMgr.SizeOfUInt);
                value.value = reader.ReadCommonVal<TaoTie.BaseGearValue>();
                return value;
            }
            #endregion
        }
    }
}