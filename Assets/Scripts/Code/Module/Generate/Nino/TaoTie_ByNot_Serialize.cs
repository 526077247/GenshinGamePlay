/* this is generated by nino */
namespace TaoTie
{
    public partial class ByNot
    {
        [LitJson.Extensions.JsonIgnore]
        public static ByNot.SerializationHelper NinoSerializationHelper = new ByNot.SerializationHelper();
        public class SerializationHelper: Nino.Serialization.NinoWrapperBase<ByNot>
        {
            #region NINO_CODEGEN
            public override void Serialize(ByNot value, Nino.Serialization.Writer writer)
            {
                if(value == null)
                {
                    writer.Write(false);
                    return;
                }
                writer.Write(true);
                writer.CompressAndWriteEnum<TaoTie.AbilityTargetting>(value.Target);
                writer.WriteCommonVal<TaoTie.ConfigAbilityPredicate>(value.Predicate==null?TypeInfo<TaoTie.ConfigAbilityPredicate>.Type:value.Predicate.GetType(),value.Predicate);
            }

            public override ByNot Deserialize(Nino.Serialization.Reader reader)
            {
                if(!reader.ReadBool())
                    return null;
                ByNot value = new ByNot();
                reader.DecompressAndReadEnum<TaoTie.AbilityTargetting>(ref value.Target);
                value.Predicate = reader.ReadCommonVal<TaoTie.ConfigAbilityPredicate>();
                return value;
            }
            #endregion
        }
    }
}